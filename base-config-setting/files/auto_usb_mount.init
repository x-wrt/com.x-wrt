#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org
# Copyright (C) 2019 X-WRT <dev@x-wrt.com>

START=96

MOUNT_NTFS0="mount -t ntfs3 -o noatime,async,discard,prealloc,iocharset=utf8,uid=1000,gid=1000"
MOUNT_NTFS1="mount -t ntfs3 -o noatime,async,discard,prealloc,nls=utf8"
MOUNT_CMD1="mount -o noatime,async,iocharset=utf8,uid=1000,gid=1000,fmask=0000,dmask=0000,rw"
MOUNT_CMD2="mount -o noatime,async,rw"
MOUNT_CMD3="mount -o rw"
MOUNT_CMD4="mount"

#try_mount "$1" "$2"
try_mount()
{
	$MOUNT_NTFS0 "$1" "$2" && return 0
	$MOUNT_NTFS1 "$1" "$2" && return 0
	$MOUNT_CMD1 "$1" "$2" && return 0
	$MOUNT_CMD2 "$1" "$2" && return 0
	$MOUNT_CMD3 "$1" "$2" && return 0
	$MOUNT_CMD4 "$1" "$2" && return 0
	return 1
}

auto_mount_boot()
{
	for i in `seq 1 300`; do
		mount | grep overlayfs | grep 'workdir=/overlay/work' >/dev/null  2>&1
		test $? -eq 0 && break
		sleep 2
	done

	diskdev=""
	. /lib/functions.sh
	. /lib/upgrade/common.sh
	export_bootdevice && export_partdevice diskdev 0
	diskdev=/dev/$diskdev

	for DEV in $(ls /dev/sd*[0-9]* 2>/dev/null) $(ls /dev/mmcblk[0-9]p[0-9]* 2>/dev/null); do
		[ x$DEV = x`mount | grep "$DEV " | awk '{print $1}'` ] && continue

		test -b "$diskdev" && (echo $DEV | grep -q "$diskdev") && continue
		(echo $DEV | grep -q "/dev/ubi") && continue

		blkid $DEV | grep -q 'UUID="db0482e8-04bd-dfbb-3935-fbc9d9a9cfb9"' && continue
		blkid $DEV | grep -q 'UUID="f3178596-4427-2d3b-35c7-648b65e20d5e"' && continue

		ddir=/mnt/`basename $DEV`
		mkdir -p "$ddir" || continue
		if try_mount "$DEV" "$ddir"; then
			logger -t "auto_usb_mount" "boot auto mount $DEV to $ddir success!"
		else
			logger -t "auto_usb_mount" "boot mount $DEV to $ddir failed!"
		fi
	done
	test -e /etc/hotplug.d/block/20-auto_usb_mount || {
		mkdir -p /etc/hotplug.d/block
		ln -sf /usr/share/base-config-setting/auto_usb_mount.hotplug /etc/hotplug.d/block/20-auto_usb_mount
	}
	uci get fstab.@global[0].anon_mount_bak 2>/dev/null && {
		uci set fstab.@global[0].anon_mount="`uci get fstab.@global[0].anon_mount_bak`"
		uci delete fstab.@global[0].anon_mount_bak
		uci commit fstab
	}
}

enable_ssh_login_if_webui_down()
{
	sleep 5

	if lsof -ni :80 &>/dev/null || lsof -ni :443 &>/dev/null || pidof nginx &>/dev/null || pidof uhttpd &>/dev/null; then
		return 0
	fi

	sleep 56

	if lsof -ni :80 &>/dev/null || lsof -ni :443 &>/dev/null || pidof nginx &>/dev/null || pidof uhttpd &>/dev/null; then
		:
	else
		uci set dropbear.@dropbear[0].PasswordAuth='on'
		uci set dropbear.@dropbear[0].RootPasswordAuth='on'
		/etc/init.d/dropbear restart
		sleep 600
		uci revert dropbear
		/etc/init.d/dropbear restart
	fi
}

boot() {
	auto_mount_boot &

	enable_ssh_login_if_webui_down &
}
