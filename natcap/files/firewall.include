#!/bin/sh
# natcapd integration for firewall3/firewall4

iptables -t nat -C zone_wan_postrouting -p udp -m comment --comment "!fw3" -j MASQUERADE --random-fully 2>/dev/null || \
iptables -t nat -I zone_wan_postrouting -p udp -m comment --comment "!fw3" -j MASQUERADE --random-fully 2>/dev/null

nft -a list chain inet fw4 srcnat_wan | grep -o "natcap_cone_nat.*" | while read _ _ _ handle; do nft delete rule inet fw4 srcnat_wan handle $handle; done
nft insert rule inet fw4 srcnat_wan ip protocol udp meta nfproto ipv4 masquerade fully-random comment "natcap_cone_nat"

if [ x`uci get natcapd.default.dnsproxy 2>/dev/null` = x1 ] && [ x`uci get natcapd.default.enabled 2>/dev/null` = x1 ]; then
	#iptables
	iptables -t mangle -C PREROUTING -m conntrack --ctstate NEW -p udp --dport 53 -j MARK --set-xmark 0x00800090/0x008000f0 >/dev/null 2>&1 || \
	iptables -t mangle -A PREROUTING -m conntrack --ctstate NEW -p udp --dport 53 -j MARK --set-xmark 0x00800090/0x008000f0 2>/dev/null
	iptables -t nat -C prerouting_lan_rule -p udp --dport 53 -j REDIRECT --to-ports 53 2>/dev/null || \
	iptables -t nat -A prerouting_lan_rule -p udp --dport 53 -j REDIRECT --to-ports 53 2>/dev/null
	iptables -t nat -C prerouting_lan_rule -p tcp --dport 53 -j REDIRECT --to-ports 53 2>/dev/null || \
	iptables -t nat -A prerouting_lan_rule -p tcp --dport 53 -j REDIRECT --to-ports 53 2>/dev/null

	iptables -C input_wan_rule -m mark --mark 0x00800000/0x00800000 -j RETURN 2>/dev/null || \
	iptables -I input_wan_rule -m mark --mark 0x00800000/0x00800000 -j RETURN 2>/dev/null

	#nft
	nft -a list chain inet fw4 mangle_prerouting | grep -o "natcap_dnsproxy.*" | while read _ _ _ handle; do nft delete rule inet fw4 mangle_prerouting handle $handle; done
	nft insert rule inet fw4 mangle_prerouting ct state new udp dport 53 counter meta mark set mark and 0xff7fffff xor 0x00800000 comment "natcap_dnsproxy"
	nft insert rule inet fw4 mangle_prerouting ct state new udp dport 53 counter meta mark set mark and 0xffffff0f xor 0x00000090 comment "natcap_dnsproxy"
	nft insert rule inet fw4 mangle_prerouting ct state new udp dport 53 counter meta mark set mark and 0xff7fff0f xor 0x00000000 comment "natcap_dnsproxy"

	nft -a list chain inet fw4 dstnat | grep -o "natcap_dnsproxy.*" | while read _ _ _ handle; do nft delete rule inet fw4 dstnat handle $handle; done
	lans=$(echo $(fw4 -q zone lan | sort | uniq | sed 's/\(.*\)/"\1",/g') | sed 's/,$//')
	test -n "$lans" && {
	nft insert rule inet fw4 dstnat iifname { $lans } udp dport 53 counter redirect to :53 comment "natcap_dnsproxy"
	nft insert rule inet fw4 dstnat iifname { $lans } tcp dport 53 counter redirect to :53 comment "natcap_dnsproxy"
	}

	nft -a list chain inet fw4 input_wan | grep -o "natcap_dnsproxy.*" | while read _ _ _ handle; do nft delete rule inet fw4 input_wan handle $handle; done
	nft insert rule inet fw4 input_wan mark and 0x800000 == 0x800000 counter return comment "natcap_dnsproxy"
else
	#nft
	nft -a list chain inet fw4 mangle_prerouting | grep -o "natcap_dnsproxy.*" | while read _ _ _ handle; do nft delete rule inet fw4 mangle_prerouting handle $handle; done
	nft -a list chain inet fw4 dstnat | grep -o "natcap_dnsproxy.*" | while read _ _ _ handle; do nft delete rule inet fw4 dstnat handle $handle; done
	nft -a list chain inet fw4 input_wan | grep -o "natcap_dnsproxy.*" | while read _ _ _ handle; do nft delete rule inet fw4 input_wan handle $handle; done

	#iptables
	iptables -t mangle -D PREROUTING -m conntrack --ctstate NEW -p udp --dport 53 -j MARK --set-xmark 0x00800090/0x008000f0 2>/dev/null

	iptables -D input_wan_rule -m mark --mark 0x00800000/0x00800000 -j RETURN 2>/dev/null
fi

iptables -C forwarding_wan_rule -m mark --mark 0x90/0xf0 -j ACCEPT 2>/dev/null || \
iptables -A forwarding_wan_rule -m mark --mark 0x90/0xf0 -j ACCEPT 2>/dev/null

iptables -C input_wan_rule -m mark --mark 0x90/0xf0 -j ACCEPT 2>/dev/null || \
iptables -A input_wan_rule -m mark --mark 0x90/0xf0 -j ACCEPT 2>/dev/null

idx=0
while :; do
	zone=$(uci get firewall.@zone[$idx].name 2>/dev/null)
	test -n "$zone" || break
	for act in reject drop; do
		for via in to from; do
			nft -a list chain inet fw4 ${act}_${via}_${zone} 2>/dev/null | grep -q "\"natcap_accept_mark_0x90\"" || \
			nft insert rule inet fw4 ${act}_${via}_${zone} mark and 0xf0 == 0x90 counter accept comment "natcap_accept_mark_0x90" 2>/dev/null
		done
	done
	idx=$((idx+1))
done

test -f /usr/share/natcapd/natcapd.cone_nat_unused.sh && sh /usr/share/natcapd/natcapd.cone_nat_unused.sh init

exit 0
